{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"../../node_modules/flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"../../node_modules/izitoast/dist/css/iziToast.min.css\";\n\nconst inputDate = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\".start\");\n\nconst daysSpan = document.querySelector(\".field-days .value\");\nconst hoursSpan = document.querySelector(\".field-hours .value\");\nconst minutesSpan = document.querySelector(\".field-minutes .value\");\nconst secondsSpan = document.querySelector(\".field-seconds .value\");\n\nlet userSelectedDate;\nlet counter;\nconst arr = [];\nstartBtn.setAttribute('disabled', true);\n\n/* Timer */\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n}\n\nfunction spanFiller (ms) {\n    if (ms >= 0){\n        const { days, hours, minutes, seconds } = convertMs(ms);\n\n        //secondsSpan.textContent = `${seconds < 10 ? '0' + seconds : seconds.toString()}`;\n        secondsSpan.textContent = `${seconds}`.padStart(2, '0');\n        minutesSpan.textContent = `${minutes}`.padStart(2, '0');\n        hoursSpan.textContent = `${hours}`.padStart(2, '0');\n        daysSpan.textContent = `${days}`.padStart(2, '0');\n\n        counter -= 1000;\n    } else{\n        clearInterval(arr[0]);\n        arr.pop();\n        inputDate.removeAttribute('disabled');\n    }\n}\n\n/*function changespanDate(milis) {\n    if (milis >= 0){\n        milis = milis / 1000;       // made seconds\n\n        const seconds = milis % 60;\n        secondsLabels.textContent = `${seconds}`;\n        milis = (milis - seconds) / 60;         // made minutes\n\n        const minutes = milis % 60;\n        minutesLabels.textContent = `${minutes}`;\n        milis = (milis - minutes) / 60;         // made hours\n\n        const hours = milis % 24;\n        hoursLabels.textContent = `${hours}`;\n        milis = (milis - hours) / 24;           // made days\n\n        daysLabels.textContent = `${milis}`;\n\n        counter -= 1000;\n    } else {\n        clearInterval(arr[0]);\n        arr.pop();\n        inputDate.removeAttribute('disabled');\n    }\n};*/\n\n/* Start button */\n\nstartBtn.addEventListener(\"click\", () => {\n    counter = userSelectedDate.getTime() - Date.now();\n    counter -= counter % 1000;\n    const intervalId = setInterval(() => {\n        spanFiller(counter);\n    }, 1000);\n    arr.push(intervalId);\n    startBtn.setAttribute('disabled', true);\n    inputDate.setAttribute('disabled', true);\n});\n\n/* flatpickr */\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    dateFormat: \"Y-m-d H:i\",\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate.getTime() <= Date.now()) {\n            iziToast.error({\n                iconUrl: '../img/Group.svg',\n                backgroundColor: '#EF4040',\n                messageColor: '#fff',\n                position: 'topCenter',\n                message: 'Please choose a date in the future'\n            });\n        } else{\n            startBtn.removeAttribute('disabled');\n        }\n    },\n};\n\nconst fp = flatpickr(\"#datetime-picker\", options);\n"],"names":["inputDate","startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","counter","arr","convertMs","ms","days","hours","minutes","seconds","spanFiller","intervalId","options","selectedDates","iziToast","flatpickr"],"mappings":"0IAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,QAAQ,EAE1CC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,cAAc,qBAAqB,EACxDC,EAAc,SAAS,cAAc,uBAAuB,EAC5DC,EAAc,SAAS,cAAc,uBAAuB,EAElE,IAAIC,EACAC,EACJ,MAAMC,EAAM,CAAA,EACZP,EAAS,aAAa,WAAY,EAAI,EAItC,SAASQ,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAYL,EAAI,CACrB,GAAIA,GAAM,EAAE,CACR,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAGtDL,EAAY,YAAc,GAAGS,CAAO,GAAG,SAAS,EAAG,GAAG,EACtDV,EAAY,YAAc,GAAGS,CAAO,GAAG,SAAS,EAAG,GAAG,EACtDV,EAAU,YAAc,GAAGS,CAAK,GAAG,SAAS,EAAG,GAAG,EAClDV,EAAS,YAAc,GAAGS,CAAI,GAAG,SAAS,EAAG,GAAG,EAEhDJ,GAAW,GACnB,MACQ,cAAcC,EAAI,CAAC,CAAC,EACpBA,EAAI,IAAG,EACPR,EAAU,gBAAgB,UAAU,CAE5C,CA8BAC,EAAS,iBAAiB,QAAS,IAAM,CACrCM,EAAUD,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC/CC,GAAWA,EAAU,IACrB,MAAMS,EAAa,YAAY,IAAM,CACjCD,EAAWR,CAAO,CACrB,EAAE,GAAI,EACPC,EAAI,KAAKQ,CAAU,EACnBf,EAAS,aAAa,WAAY,EAAI,EACtCD,EAAU,aAAa,WAAY,EAAI,CAC3C,CAAC,EAID,MAAMiB,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,WAAY,YACZ,gBAAiB,EACjB,QAAQC,EAAe,CACnBZ,EAAmBY,EAAc,CAAC,EAC9BZ,EAAiB,QAAO,GAAM,KAAK,IAAG,EACtCa,EAAS,MAAM,CACX,QAAS,mBACT,gBAAiB,UACjB,aAAc,OACd,SAAU,YACV,QAAS,oCACzB,CAAa,EAEDlB,EAAS,gBAAgB,UAAU,CAE1C,CACL,EAEWmB,EAAU,mBAAoBH,CAAO"}